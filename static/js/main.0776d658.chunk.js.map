{"version":3,"sources":["components/Header.js","components/AboutContents.js","components/LoadPointForecast.js","assets/ny_daily_runoff_risk_20200308.png","components/MapDisplay.js","components/ToolContents.js","components/Footer.js","components/App.js","stores/index.js","stores/app-store.js","serviceWorker.js","index.js"],"names":["Header","getActiveTabIndex","console","log","props","history","location","pathname","handleChange","event","value","push","handleChangeIndex","index","setState","classes","this","className","root","AppBar","position","color","Toolbar","titleLong","onClick","Typography","variant","headerText","subHeaderText","titleShort","rightToolbar","Tabs","onChange","indicatorColor","textColor","Tab","tab","label","bottomToolbar","React","Component","withRouter","withStyles","theme","display","appBar","marginLeft","minWidth","width","blue","fontSize","fontWeight","marginBottom","marginRight","breakpoints","down","up","cursor","toolbar","mixins","AboutContents","state","LoadPointForecast","lon","lat","fetch","then","r","json","data","propTypes","PropTypes","string","isRequired","TOKEN","navStyle","top","left","padding","geocoderStyle","MapDisplay","mapRef","createRef","handleViewportChange","viewport","handleGeocoderViewportChange","transitionDuration","handleMouseMove","e","coordinates","lngLat","popupIsVisible","handleMouseOut","handleMapClick","handlePointChange","handleGeocoderLoading","handleGeocoderResults","mapStyle","imgsrc","imgcoords","longitude","latitude","zoom","GridData","ref","height","mapboxApiAccessToken","onViewportChange","onMouseMove","onMouseOut","style","captureClick","placeholder","proximity","showCompass","closeButton","closeOnClick","anchor","toFixed","ToolContents","initStateForLoading","pointData","lt","ln","variable","date","prevProps","prevState","toString","response","Grid","container","justify","spacing","item","xs","md","flexGrow","Footer","createMuiTheme","shadows","Array","fill","palette","primary","main","alternativeTextColor","overrides","MUIDataTableBodyRow","backgroundColor","App","basename","process","exact","path","render","component","to","withTheme","store","window","protocol","app","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0776d658.chunk.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\n//import { inject, observer} from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    marginLeft: 0,\n  },\n  tab: {\n    minWidth: 120,\n    width: 120,\n  },\n  headerText: {\n    color: blue[800],\n    fontSize: '26px',\n    fontWeight: 'bold',\n    marginBottom: '4px'\n  },\n  subHeaderText: {\n    color: blue[800],\n    fontSize: '16px'\n  },\n  rightToolbar: {\n    marginLeft: 'auto',\n    marginRight: 0,\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n  bottomToolbar: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  titleLong: {\n    cursor: 'pointer',\n    [theme.breakpoints.down('xs')]: {\n      display: 'none',\n    },\n  },\n  titleShort: {\n    cursor: 'pointer',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\n//var app;\n\n//@inject('store') @observer\nclass Header extends React.Component {\n\n  //constructor(props) {\n  //    super(props);\n  //    app = this.props.store.app;\n  //}\n\n  getActiveTabIndex = () => {\n    console.log(this.props.history)\n    console.log(this.props.history.location.pathname)\n    if (this.props.history.location.pathname==='/') {\n      return 0\n    } else if (this.props.history.location.pathname==='/forecast') {\n      return 0\n    } else if (this.props.history.location.pathname==='/about') {\n      return 1\n    } else {\n    }\n  }\n\n  handleChange = (event, value) => {\n    //this.setState({ value });\n    if (value===0) {\n        // go to home (forecast) page\n        this.props.history.push('/');\n    } else {\n        // go to about page\n        this.props.history.push('/about');\n    }\n    //this.props.store.app.setActivePage(value);\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n\n  render() {\n    //const { classes, theme } = this.props;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\">\n          <Toolbar>\n            <div className={classes.titleLong} onClick={() => {this.props.history.push('/')}}>\n                <Typography variant=\"h1\" className={classes.headerText}>\n                        Nutrient Applicator Forecast For New York State\n                </Typography>\n                <Typography variant=\"h2\" className={classes.subHeaderText}>\n                        Decision support for managing nutrient runoff risk\n                </Typography>\n            </div>\n            <div className={classes.titleShort} onClick={() => {this.props.history.push('/')}}>\n                <Typography variant=\"h1\" className={classes.headerText}>\n                        NYS Applicator Forecast\n                </Typography>\n                <Typography variant=\"h2\" className={classes.subHeaderText}>\n                        Support for managing runoff risk\n                </Typography>\n            </div>\n            <section className={classes.rightToolbar}>\n              <Tabs\n                value={this.getActiveTabIndex()}\n                onChange={this.handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"standard\"\n              >\n                <Tab classes={{ root: classes.tab }} label=\"FORECAST\" value={0} />\n                <Tab classes={{ root: classes.tab }} label=\"ABOUT\" value={1} />\n              </Tabs>\n            </section>\n          </Toolbar>\n          <div className={classes.bottomToolbar}>\n              <Tabs\n                value={this.getActiveTabIndex()}\n                onChange={this.handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"standard\"\n              >\n                <Tab label=\"FORECAST\" value={0} />\n                <Tab label=\"ABOUT\" value={1} />\n              </Tabs>\n          </div>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  //theme: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(Header));\n","import React, { Component } from 'react';\n\nclass AboutContents extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n      };\n  }\n\n  render() {\n    //const {viewport, coordinates, popupIsVisible, imgsrc, imgcoords} = this.state;\n    return (\n      <div>\n        About Page\n      </div>\n    );\n  }\n}\n\nexport default AboutContents;\n","///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n//import React from 'react';\n//import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst LoadPointForecast = ({lon,lat}) => {\n        let url_string = \"http://tools.climatesmartfarming.org/runoff-risk/fcst-data/?lat=\"+lat+\"&lon=\"+lon\n        return fetch(url_string)\n             .then(r => r.json())\n             .then(data => {\n               return (data) ? data : null;\n             });\n}\n\nLoadPointForecast.propTypes = {\n  lon: PropTypes.string.isRequired,\n  lat: PropTypes.string.isRequired,\n};\n\nexport default LoadPointForecast;\n","export default __webpack_public_path__ + \"static/media/ny_daily_runoff_risk_20200308.bab0de40.png\";","import 'mapbox-gl/dist/mapbox-gl.css';\n//import 'react-map-gl/node_modules/mapbox-gl/dist/mapbox-gl.css';\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\nimport PropTypes from 'prop-types';\n\nimport React, { Component } from 'react';\nimport MapGL, {NavigationControl, Popup} from 'react-map-gl';\nimport Geocoder from 'react-map-gl-geocoder'\n\n//import GridData from './assets/GridData.png'\nimport GridData from '../assets/ny_daily_runoff_risk_20200308.png'\n\nconst TOKEN = 'pk.eyJ1IjoiYm5iMiIsImEiOiJjazJtYTgwajQwZnFiM29waGo4NHI1MWpnIn0.Xmb6eYeJArqqBQtKkWorUQ'\n\nconst navStyle = {\n  position: 'absolute',\n  top: 10,\n  left: 0,\n  padding: '10px'\n};\n\nconst geocoderStyle = {\n  position: 'absolute',\n  top: 10,\n  left: 60,\n  padding: '10px'\n};\n\nclass MapDisplay extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        viewport: {\n          longitude: -76.5,\n          latitude: 42.5,\n          zoom: 6.2\n        },\n        coordinates: [-76.5,42.5],\n        popupIsVisible: false,\n        imgsrc: GridData,\n        imgcoords: [\n          [-79.95970329697062, 46.54645497007963],\n          [-69.66501014096089, 46.54645497007963],\n          [-69.66501014096083, 39.33905737461734],\n          [-79.95970329697053, 39.3390573746173]\n        ]\n      };\n  }\n\n  mapRef = React.createRef()\n  //geocoderContainerRef = React.createRef()\n\n  handleViewportChange = (viewport) => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    })\n  }\n\n  // override geocoder defaults, if necessary\n  handleGeocoderViewportChange = (viewport) => {\n    const geocoderDefaultOverrides = { transitionDuration: 1000 }\n\n    return this.handleViewportChange({\n      ...viewport,\n      ...geocoderDefaultOverrides\n    })\n  }\n\n  handleMouseMove = (e) => {\n      this.setState({\n        coordinates: e.lngLat,\n        popupIsVisible: true\n      })\n  }\n\n  handleMouseOut = (e) => {\n      this.setState({\n        popupIsVisible: false\n      })\n  }\n\n  handleMapClick = (e) => {\n      //console.log('map click');\n      //console.log(e.lngLat);\n      this.props.handlePointChange(e.lngLat[1],e.lngLat[0]);\n  }\n\n  handleGeocoderLoading = (e) => {\n      //console.log('geocoder loading');\n      this.setState({\n        popupIsVisible: false\n      })\n  }\n\n  handleGeocoderResults = (e) => {\n      //console.log('geocoder results');\n      this.setState({\n        popupIsVisible: true\n      })\n  }\n\n  //handleGeocoderClick = (e) => {\n  //    console.log('geocoder click');\n  //    console.log(e.lngLat);\n  //}\n\n  mapStyle = (imgsrc,imgcoords) => {\n    return ({\n    'version': 8,\n    'sources': {\n      'mapbox': {\n        'type': 'vector',\n        'url': 'mapbox://mapbox.mapbox-streets-v8'\n      },\n      'overlay': {\n        'type': 'image',\n        'url': imgsrc,\n        'coordinates': imgcoords,\n      }\n    },\n    'layers': [\n      {\n        'id': 'water',\n        'source': 'mapbox',\n        'source-layer': 'water',\n        'type': 'fill',\n        'paint': { 'fill-color': '#2c2c2c' }\n      },\n      {\n        'id': 'boundaries',\n        'source': 'mapbox',\n        'source-layer': 'admin',\n        'type': 'line',\n        //'paint': {\n        //  'line-color': '#797979',\n        //  'line-dasharray': [2, 2, 6, 2]\n        //},\n        //'filter': ['all', ['==', 'maritime', 0]]\n      },\n      {\n        'id': 'overlay',\n        'source': 'overlay',\n        'type': 'raster',\n        'paint': { 'raster-opacity': 0.85 }\n      }\n    ]\n    })\n  };\n\n  render() {\n    const {viewport, coordinates, popupIsVisible, imgsrc, imgcoords} = this.state;\n    return (\n      <div>\n      <MapGL\n        ref={this.mapRef}\n        {...viewport}\n        width='100%'\n        height='70vh'\n        mapStyle={this.mapStyle(imgsrc,imgcoords)}\n        mapboxApiAccessToken={TOKEN}\n        onViewportChange={this.handleViewportChange}\n        onMouseMove={(event) => {\n          this.handleMouseMove(event)\n        }}\n        onMouseOut={(event) => {\n          this.handleMouseOut(event)\n        }}\n        onClick={(event) => {\n          this.handleMapClick(event)\n        }}\n      >\n        <div className=\"geo\" style={geocoderStyle}>\n          <Geocoder\n            mapRef={this.mapRef}\n            captureClick={true}\n            position='top-right'\n            placeholder='Find address or location'\n            proximity={{'longitude':-76.5,'latitude':42.5}}\n            onViewportChange={this.handleGeocoderViewportChange}\n            //onLoading={this.handleGeocoderLoading}\n            //onResults={this.handleGeocoderResults}\n            mapboxApiAccessToken={TOKEN}\n          />\n        </div>\n        <div className=\"nav\" style={navStyle}>\n          <NavigationControl showCompass={false} />\n        </div>\n        {popupIsVisible &&\n        <Popup\n          longitude={coordinates[0]}\n          latitude={coordinates[1]}\n          closeButton={false}\n          closeOnClick={false}\n          anchor='top'\n        >\n          <div>\n            Lon:{coordinates[0].toFixed(3)}<br/>Lat:{coordinates[1].toFixed(3)}\n          </div>\n        </Popup>\n        }\n      </MapGL>\n      </div>\n    );\n  }\n}\n\nMapDisplay.propTypes = {\n  handlePointChange: PropTypes.func.isRequired,\n};\n\nexport default MapDisplay;\n","///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nimport React, { Component } from 'react';\n//import { inject, observer} from 'mobx-react';\n//import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\n//import 'leaflet/dist/leaflet.css';\nimport Grid from '@material-ui/core/Grid';\n\nimport LoadPointForecast from './LoadPointForecast';\nimport MapDisplay from './MapDisplay';\n\n// Styles\nimport '../styles/ToolContents.css';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nclass ToolContents extends Component {\n    //const { classes } = props;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          variable: 'runoffrisk',\n          date: '20201130',\n          lat: null,\n          lon: null,\n          pointData: null,\n        }\n    }\n\n    componentDidMount() {\n        this.initStateForLoading()\n    }\n\n    componentDidUpdate(prevProps,prevState) {\n        if ((prevState.lat!==this.state.lat) && (prevState.lon!==this.state.lon)) {\n          //this.initStateForLoading()\n          LoadPointForecast({lon:this.state.lon.toString(), lat:this.state.lat.toString()})\n            .then(response => {\n              this.setState({\n                pointData: response,\n              })\n            });\n        }\n    }\n\n    initStateForLoading = () => {\n      this.setState({\n        //lon: null,\n        //lat: null,\n        pointData: null,\n      })\n    }\n\n    handlePointChange = (lt,ln) => {\n      this.setState({\n        lat: lt,\n        lon: ln,\n      })\n    }\n\n    render() {\n\n        return (\n                  <Grid container justify=\"space-evenly\" spacing={1}>\n                      <Grid item xs={12} md={8}>\n                        <MapDisplay handlePointChange={this.handlePointChange} />\n                      </Grid>\n                      <Grid item xs={12} md={3}>\n                        {this.state.pointData && this.state.pointData.lat},\n                        {this.state.pointData && this.state.pointData.lon}\n                      </Grid>\n                  </Grid>\n        );\n\n    }\n}\n\n//StationExplorer.propTypes = {\n//  classes: PropTypes.object.isRequired,\n//};\n\nexport default withStyles(styles)(ToolContents);\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n      };\n  }\n\n  render() {\n    //const {viewport, coordinates, popupIsVisible, imgsrc, imgcoords} = this.state;\n    return (\n      <div>\n        Footer\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nimport React, { Component } from 'react';\n//import { inject, observer} from 'mobx-react';\nimport { MuiThemeProvider, createMuiTheme, withStyles, withTheme  } from \"@material-ui/core/styles\";\nimport blue from '@material-ui/core/colors/blue';\n\n// import route Components here\nimport {\n  BrowserRouter as Router,\n  Route,\n  //Link,\n  Switch,\n  Redirect\n} from 'react-router-dom'\n\n// Components\nimport Header from '../components/Header';\nimport AboutContents from '../components/AboutContents';\nimport ToolContents from '../components/ToolContents';\n//import MapDisplay from '../components/MapDisplay';\nimport Footer from '../components/Footer';\n\n// Styles\nimport '../styles/App.css';\n\nconst theme = createMuiTheme({\n  //shadows: [\"none\"],\n  shadows: Array(25).fill('none'),\n  palette: {\n    primary: {\n        main: blue[800]\n    },\n    alternativeTextColor: blue[800],\n  },\n  overrides: {\n    MUIDataTableBodyRow: {\n      root: {\n        '&:nth-child(odd)': {\n          backgroundColor: '#D3D3D3'\n        }\n      }\n    },\n  },\n});\n\nconst styles = theme => ({\n  root: {}\n});\n\n//var app;\n\n//@inject('store') @observer\nclass App extends Component {\n\n    //constructor(props) {\n    //    super(props);\n    //    app = this.props.store.app;\n    //}\n\n    render() {\n\n        return (\n          <Router basename={process.env.PUBLIC_URL}>\n            <MuiThemeProvider theme={theme}>\n              <div className=\"App\">\n                <Header />\n\n                <Switch>\n                  <Route exact path=\"/\" render={(props) => <ToolContents {...props} />} />\n                  <Route exact path=\"/forecasts\" render={(props) => <ToolContents {...props} />} />\n                  <Route path=\"/about\" component={AboutContents} />\n                  <Route render={() => <Redirect to=\"/\" />} />\n                </Switch>\n\n                <Footer />\n              </div>\n            </MuiThemeProvider>\n          </Router>\n        );\n\n    }\n}\n\nexport default withStyles(styles)(withTheme(App));\n","\nimport { AppStore } from \"./app-store\";\n\nconst store = {\n  app: new AppStore(),\n};\n\nexport default store;\n","import { observable, computed, action } from 'mobx';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst protocol = window.location.protocol;\n\nexport class AppStore {\n\n    //run these on initial load\n    constructor() {\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Components\nimport App from './components/App';\n\n//Styles\n//import './styles/index.css';\n\n//Mobx\nimport store from './stores';\nimport { Provider } from 'mobx-react';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}